start: (NEWLINE|statement|funcdef)+ ;
statement: assign|var|func|vardec ;
assign: (vardec|var) '=' expr  ;
vardec: 'int ' identifier  ;
var: identifier ;
expr: (var|number|add|sub|mul|div) (expr)* ;
add: (var|number) '\+' (var|number) ;
sub: (var|number) '\-' (var|number) ;
mul: (var|number) '\*' (var|number) ;
div: (var|number) '/' (var|number) ;
funcdef: (ftype) (identifier) '\(' (vardec)* '\)' '{' (NEWLINE|statement)* '}' ;

func: (identifier) '\(' '\)' ;

ftype: 'void' ;
number: '[0-9]+' ;
identifier: '\w+' ;
SPACES: '[ \t;]+' (%ignore) ;
NEWLINE: '(\r?\n[\t ]*)+' (%newline) ;
